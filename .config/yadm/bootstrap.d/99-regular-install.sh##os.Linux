#!/usr/bin/env bash

if [[ -d $HOME/.mozilla/firefox ]]; then
  # Adapt Firefox settings
  def_Pfile=$(cat "$HOME/.mozilla/firefox/profiles.ini" | sed -n -e 's/^.*Path=//p' | head -n 1)
  # Enable FIDO U2F in Firefox
  echo "user_pref(\"security.webauth.u2f\", \"true\");" >> "$HOME/.mozilla/firefox/$def_Pfile/prefs.js"
fi

sudo apt update

# Fix a bug in Ubuntu 18.04 making the DNS server provided by DHCP be ignored (https://askubuntu.com/a/1041631/780635)
sudo rm -f /etc/resolv.conf
sudo ln -s /run/systemd/resolve/resolv.conf /etc/resolv.conf

#sudo timedatectl set-local-rtc 1 # needed when dual-booting with Windows
sudo timedatectl set-ntp no && \
  timedatectl && \
  sudo apt install -y ntp
# TODO: Add "server ntp.pedropombeiro.com" to /etc/ntp.conf

sudo apt install -y preload gnome-tweak-tool unity-tweak-tool build-essential \
  gdebi-core network-manager-openvpn-gnome moreutils \
  rng-tools asciinema

# Install fonts for Powerline10k theme
font_dir="$HOME/.local/share/fonts"
wget -O "$font_dir/MesloLGS NF Regular.ttf" https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Regular.ttf
wget -O "$font_dir/MesloLGS NF Bold.ttf" https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold.ttf
wget -O "$font_dir/MesloLGS NF Italic.ttf" https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Italic.ttf
wget -O "$font_dir/MesloLGS NF Bold Italic.ttf" https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold%20Italic.ttf
if command -v fc-cache &>/dev/null; then
  echo "Resetting font cache, this may take a moment..."
  fc-cache -f "$font_dir"
fi

# Set as default Ubuntu terminal font
gsettings set \
  org.gnome.Terminal.Legacy.Profile:/org/gnome/terminal/legacy/profiles:/:b1dcc9dd-5262-4d8d-a863-c897e6d979b9/ \
  font 'MesloLGS NF 10'

sudo apt install -y ccze # https://blog.tersmitten.nl/how-to-colorize-your-log-files-with-ccze.html

download_dir="$(mktemp -d)"

gsettings set com.ubuntu.user-interface scale-factor "{'': 8, 'DP-1': 16, 'eDP-1': 16}"

# autorandr
sudo apt install -y autorandr
cat << EOF > /lib/udev/40-monitor-hotplug.rules
ACTION=="change", SUBSYSTEM=="drm", RUN+="/usr/bin/autorandr --batch --change --default default"
EOF

# brightness-controller
#sudo add-apt-repository ppa:apandada1/brightness-controller && \
  #sudo apt install -y brightness-controller

# ProtonMail Bridge
cd "${download_dir}" && \
  wget -O protonmail-bridge.deb https://protonmail.com/download/bridge/protonmail-bridge_2.1.1-1_amd64.deb
  sudo gdebi protonmail-bridge.deb

# ProtonVPN
sudo apt install -y openvpn dialog python3-pip python3-setuptools
sudo pip3 install protonvpn-cli

# Ranger
pip install ranger-fm

# Ledger Nano S
wget -q -O - https://raw.githubusercontent.com/LedgerHQ/udev-rules/master/add_udev_rules.sh | sudo bash
sudo apt install -y python3-pip libusb-1.0-0-dev libudev-dev
sudo pip3 install btchip-python

cd "${download_dir}" && wget -O ledger-live-desktop-linux-x86_64.AppImage https://github.com/LedgerHQ/ledger-live-desktop/releases/download/v2.40.4/ledger-live-desktop-2.40.4-linux-x86_64.AppImage && \
  chmod +x ledger-live-desktop-linux-x86_64.AppImage && \
  sudo mv ledger-live-desktop-linux-x86_64.AppImage /usr/local/bin/

# Google Chrome
echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list && \
  cd "${download_dir}" && wget https://dl.google.com/linux/linux_signing_key.pub && \
  sudo apt-key add linux_signing_key.pub && \
  sudo apt update && \
  sudo apt install google-chrome-stable

# Toggl
cd "${download_dir}" && \
  wget http://fr.archive.ubuntu.com/ubuntu/pool/main/g/gst-plugins-base0.10/libgstreamer-plugins-base0.10-0_0.10.36-1_amd64.deb && \
  wget http://fr.archive.ubuntu.com/ubuntu/pool/universe/g/gstreamer0.10/libgstreamer0.10-0_0.10.36-1.5ubuntu1_amd64.deb && \
  sudo gdebi libgstreamer*.deb && \
  wget --max-redirect=3 -O toggl.deb "https://toggl.com/api/v8/installer?app=td&platform=deb64&channel=stable" && \
  sudo gdebi toggl.deb && \
  sudo mv /usr/share/applications/toggldesktop.desktop /usr/share/applications/toggldesktop.desktop.orig && \
  sudo bash -c "sed -e 's/Exec=\/opt\/toggldesktop\/TogglDesktop.sh/Exec=env QT_DEVICE_PIXEL_RATIO=2 \/opt\/toggldesktop\/TogglDesktop.sh/' /usr/share/applications/toggldesktop.desktop.orig > /usr/share/applications/toggldesktop.desktop"

# Skype
#cd "${download_dir}" && wget https://repo.skype.com/latest/skypeforlinux-64.deb && \
#  sudo gdebi skypeforlinux-64.deb

# Pushbullet
cd "${download_dir}" && wget -O pb-for-desktop.deb https://github.com/sidneys/pb-for-desktop/releases/download/v11.0.2/pb-for-desktop-11.0.2-amd64.deb && \
  sudo gdebi pb-for-desktop.deb

sudo apt --fix-broken install -y

# Docker CE
sudo apt update && \
sudo apt install -y \
    apt-transport-https \
    ca-certificates \
    curl \
    software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - &&
sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   edge" && \
   sudo apt update && \
   sudo apt install -y docker-ce && \
   sudo docker run hello-world && \
   sudo usermod -a -G docker $LOGNAME

# Docker Compose
sudo curl -L https://github.com/docker/compose/releases/download/2.4.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose && \
  sudo chmod +x /usr/local/bin/docker-compose

# Beyond Compare 4
cd "${download_dir}" && wget -O bcompare_amd64.deb https://www.scootersoftware.com/bcompare-4.3.4.24657_amd64.deb && \
  sudo gdebi bcompare_amd64.deb && \
  sudo ln -sf /usr/bin/bcompare /usr/local/bin/bcompare # For compatibility with install on MacOS

# P4Merge
cd "${download_dir}" && wget https://www.perforce.com/downloads/perforce/r17.3/bin.linux26x86_64/p4v.tgz && \
  tar zxvf p4v.tgz && \
  sudo cp -r p4v-* /usr/local/p4v/ && \
  sudo ln -s /usr/local/p4v/bin/p4merge /usr/bin/p4merge

# VS Code
cd "${download_dir}" && curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg && \
  sudo mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg && \
  sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main" > /etc/apt/sources.list.d/vscode.list' && \
  sudo apt update && \
  sudo apt install -y code && \
  sudo apt install -y xclip # adds support for copying to the clipboard

# Yubikey
sudo add-apt-repository -y ppa:yubico/stable &&  \
  sudo apt update && \
  sudo apt install -y pinentry-curses scdaemon pcscd yubikey-personalization libusb-1.0-0-dev && \
  sudo apt install -y yubikey-neo-manager

## TODO: Follow https://github.com/drduh/YubiKey-Guide#install---linux
echo 'keyserver hkps://keys.openpgp.org' >> ~/.gnupg/dirmngr.conf

# GPG
sudo apt install -y gnupg gnupg-agent
sudo ln -sf /etc/alternatives/pinentry /usr/local/bin/pinentry-xp
gpg --recv 0x91527A684B864DC0 # Install Yubikey public key
gpg --list-secret-keys --keyid-format LONG

# Git
sudo add-apt-repository -y ppa:git-core/ppa && \
  sudo apt update && \
  sudo apt install -y git

# Ensure we have a common location for gpg between OSX and Linux
sudo ln -sf /usr/bin/gpg /usr/local/bin/gpg

# GitExtensions
sudo apt install -y mono-complete
cd "${download_dir}" && wget -O GitExtensions-Mono.zip https://github.com/gitextensions/gitextensions/releases/download/v2.51.05/GitExtensions-2.51.05-Mono.zip && \
  sudo unzip GitExtensions-Mono.zip -d /usr/local/bin/ &&
  sudo chmod +x /usr/local/bin/GitExtensions/gitext.sh
## GitExtensions should be run from the command line with `gitext.sh &`

cat << EOF > ~/GitExtensions.desktop
[Desktop Entry]
Type=Application
Terminal=false
Name=GitExtensions
Icon=/usr/local/bin/GitExtensions/git-extensions-logo-final-256.ico
Exec=/usr/local/bin/GitExtensions/gitext.sh
EOF
sudo mkdir -p /usr/local/share/applications
sudo mv ~/GitExtensions.desktop /usr/local/share/applications/GitExtensions.desktop

# Slack
sudo apt install -y slack

# KeePass
sudo apt-add-repository ppa:jtaylor/keepass && \
  sudo add-apt-repository ppa:dlech/keepass2-plugins && \
  sudo apt update && \
  sudo apt install -y keepass2 keepass2-plugin-keeagent xdotool && \
  sudo apt upgrade -y

cd "${download_dir}" && wget -O KeeOtp.zip https://bitbucket.org/devinmartin/keeotp/downloads/KeeOtp-1.3.9.zip && \
  sudo mkdir -p /usr/lib/keepass2/plugins && \
  sudo unzip KeeOtp.zip -d /usr/lib/keepass2/plugins

# KVM
sudo apt install -y qemu-kvm libvirt-bin ubuntu-vm-builder bridge-utils

# https://confluence.jetbrains.com/display/IDEADEV/Inotify+Watches+Limit
echo fs.inotify.max_user_watches = 524288 | sudo tee -a /etc/sysctl.conf

echo vm.swappiness=10 | sudo tee -a /etc/sysctl.conf
sudo sysctl -p

# ngrok
cd "${download_dir}" && wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip && \
  sudo mkdir -p /usr/local/bin/ngrok &&
  sudo unzip ngrok-stable-linux-amd64.zip -d /usr/local/bin/ngrok/

echo "PATH='\$PATH:/usr/local/bin/GitExtensions/:/usr/local/bin/ngrok/'" | tee -a ~/.zshrc

sudo apt install -f -y
sudo apt autoremove

# TODO: Open the dialog Keyboard Shortcuts in the system preferences, click the Add button, enter KeePass Auto-Type as name and
# mono /usr/lib/keepass2/KeePass.exe --auto-type
# as command, then click [Apply]. Click on Disabled of the newly created item (such that the text 'New shortcut...' appears), press Ctrl+Alt+A, and close the dialog.

sudo apt install -y cifs-utils # https://wiki.ubuntu.com/MountWindowsSharesPermanently
sudo sh -c "echo '//nas/home  /media/pedro  cifs  credentials=/home/pedro/.smbcredentials,iocharset=utf8,sec=ntlmv2  0  0' << /etc/fstab"

#sudo apt install -y smbclient
# # TODO: smbclient //nas/Download -U pedro%<password>
# TODO: http://ubuntuhandbook.org/index.php/2016/04/enable-ssh-ubuntu-16-04-lts/

gsettings set org.compiz.unityshell:/org/compiz/profiles/unity/plugins/unityshell/ launcher-minimize-window true
gsettings set org.gnome.desktop.peripherals.touchpad natural-scroll false
gsettings set org.gnome.desktop.peripherals.touchpad click-method 'areas'

#wget https://www.privateinternetaccess.com/installer/pia-nm.sh && \
#  sudo bash pia-nm.sh

sudo mv /var/lib/snapd/desktop/applications/spotify_spotify.desktop /var/lib/snapd/desktop/applications/spotify_spotify.desktop.orig && \
  sudo bash -c "sed -e 's/Exec=env BAMF_DESKTOP_FILE_HINT=\/var\/lib\/snapd\/desktop\/applications\/spotify_spotify.desktop \/snap\/bin\/spotify %U/Exec=env BAMF_DESKTOP_FILE_HINT=\/var\/lib\/snapd\/desktop\/applications\/spotify_spotify.desktop \/snap\/bin\/spotify --force-device-scale-factor=1.5 %U/' /var/lib/snapd/desktop/applications/spotify_spotify.desktop.orig > /var/lib/snapd/desktop/applications/spotify_spotify.desktop"

# TODO: https://www.bettertechtips.com/linux/track-activities-linux/
/usr/local/bin/ledger-live-desktop-linux-x86_64.AppImage & disown

###################################################################
# Attended configuration
###################################################################

sudo protonvpn init

# Create SSH key for github.com and gitlab.com
# https://help.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent
ssh-keygen -t ed25519 -f ~/.ssh/id_ed25519.pub -C "noreply@pedro.pombei.ro"
xclip -sel clip < ~/.ssh/id_ed25519.pub
echo "Add the SSH key from keyboard to your GitLab account. Opening browser..."
open https://gitlab.com/profile/keys
echo "Press Return when done"
read -r

echo "Add the SSH key from keyboard to your GitHub account. Opening browser..."
open https://github.com/settings/keys
echo "Press Return when done"
read -r
