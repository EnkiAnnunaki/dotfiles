#!/usr/bin/env bash

YADM_SCRIPTS=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )/../scripts" &> /dev/null && pwd )

source "${YADM_SCRIPTS}/colors.sh"

printf "${YELLOW}%s${NC}\n" "Installing asdf plugins..."

type -f asdf >/dev/null 2>&1 || . "${HOME}/.asdf/asdf.sh"

set +e
rm -rf "${HOME}/.asdf/shims"
asdf reshim

for p in bat ctop delta duf dust fd golang golangci-lint jq lazygit nodejs ripgrep rust viddy xh; do
  asdf plugin add "${p}"
done
for plugin in $(asdf plugin list | sort | grep -vE '^(golang|nodejs)$'); do
  VERSION="$(asdf latest "$plugin" 2>/dev/null)"
  if [ $? -ne 0 ]; then
    VERSION="$(asdf list all "$plugin" | grep -e '[0-9]\+\.[0-9]\+\.[0-9]\+.*' | sort --ignore-leading-blanks --version-sort --reverse | head -n1)"
  fi
  asdf install "$plugin" "$VERSION"
  asdf global "$plugin" "$VERSION"
done
set -e

asdf install golang 1.18.8 && asdf global golang 1.18.8
asdf install nodejs 17.9.0 && asdf global nodejs 17.9.0
asdf install rust 1.58.1 && asdf global rust 1.58.1

neovim_version='0.8.0'
# Neovim >= 0.8.0 uses glibc 2.29, so we'll replace it with a version built on Ubuntu 18.04
# Install it into Entware tree structure, even if it does not originate from Entware
neovim_install_dir="$(/sbin/getcfg Entware Install_Path -f /etc/config/qpkg.conf)"
tempdir="$(mktemp -d)"
wget "http://github.com/antoineco/neovim-neovim/releases/download/v${neovim_version}/nvim-linux64.tar.gz" -O "${tempdir}/nvim-linux64.tar.gz"
cd "${tempdir}"
tar xzvf nvim-linux64.tar.gz
cp -rf "${tempdir}"/nvim-linux64/* "${neovim_install_dir}/"
chown -R admin:administrators "${neovim_install_dir}"
cd -
rm -rf "${tempdir}"

# Temporarily pin problematic packages
asdf global delta 0.12.0
